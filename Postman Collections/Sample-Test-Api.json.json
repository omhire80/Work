{
	"info": {
		"_postman_id": "59562e2e-a49c-48b4-a239-66d3a39c6924",
		"name": "Sample Test Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Validate",
			"item": [
				{
					"name": "List of users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "255c8002-78be-4834-9d2d-6cdeb1ca4695",
								"exec": [
									"//url_Global is Global Variable= Anyone is Use in Workspace"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f05db715-9889-4475-9610-7873381562a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_Global}}/api/users?pages=20",
							"host": [
								"{{url_Global}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "pages",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a8e64ff-4c3e-4efb-bdcc-d35c4e1d6086",
								"exec": [
									"pm.test(\"Status Code is Created\",()=>{\r",
									"    pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Response Time is Less\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c922c3fa-1fbf-447d-8894-408f6eae94ab",
								"exec": [
									"//Local Variable = request level variable\r",
									"pm.variables.set(\"url_Local\",\"https://reqres.in\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a3eddbe8-90fd-47d8-8fb5-ac586af97ba3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n    \r\n   \r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url_Local}}/api/users"
					},
					"response": []
				},
				{
					"name": "Check new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67ecdf03-ca48-4f18-bd7b-01bb4e56535a",
								"exec": [
									"pm.test(\"Status Code is Created\",()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bc014f20-8a61-4fe8-b0cc-3ed650bf89ff",
								"exec": [
									"//Request Level Pre-Request Script\r",
									"console.log(\"Pre-request Script at Request Level\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1cb45d4c-e733-43c4-b31e-4cabcdd42a1b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"Message\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_Global}}/api/users?pages=20",
							"host": [
								"{{url_Global}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "pages",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67ecdf03-ca48-4f18-bd7b-01bb4e56535a",
								"exec": [
									"//Request Level Test Script\r",
									"console.log(\"Test Script at Request Level\");\r",
									"\r",
									"\r",
									"\r",
									"//1. Validating Test Status\r",
									"    pm.test(\"Status is Present\",function(){\r",
									"        //,function(){}  OR   ,()=>{}   Same\r",
									"        pm.response.to.have.status(200) });\r",
									"\r",
									"    pm.test(\"Multiple Status Code Present\",()=>{//check multiple status codes\r",
									"        pm.expect(pm.response.code).to.be.oneOf([200,201]);//values are always in array \r",
									"    });\r",
									"\r",
									"//2. Validating Responce Time\r",
									"    pm.test(\"ResponceTime is Less\",()=>{\r",
									"        pm.expect(pm.response.responseTime).to.be.below(2002);\r",
									"    })\r",
									"\r",
									"//3. Validating Status code text\r",
									"    pm.test(\"Satus text is OK\",()=>{\r",
									"         pm.response.to.have.status(\"OK\")//Status is case Sensitive \r",
									"    })\r",
									"\r",
									"//4. Validating Headers Present or Not\r",
									"    pm.test(\"Status text is String\",()=>{\r",
									"         pm.response.to.have.header(\"age\");//Headers are Not-Case Sensitive \r",
									"    })\r",
									"\r",
									"//5. Validating responce header Having specific value\r",
									"    pm.test(\"Connection Header is keep-alive\",function(){\r",
									"        pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');//value is case sensitive\r",
									"    })\r",
									"\r",
									"//6. VALIDATING Cookies is Present\r",
									"   // pm.test(\"Cookie 'name of Cookie' is present\",()=>{\r",
									"     //   pm.expect(pm.cookies.has('name of Cookie')).to.be.true })\r",
									"\r",
									"//7. VALIDATING Cookies Value\r",
									"//   pm.test(\"Cookie 'name of Cookie' is present\",()=>{\r",
									"  //   pm.expect(pm.cookies.has('name of Cookie')).to.eql('Value') })\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bc014f20-8a61-4fe8-b0cc-3ed650bf89ff",
								"exec": [
									"//Request Level Pre-Request Script\r",
									"console.log(\"Pre-request Script at Request Level\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a2f57e52-c21f-4a66-9dad-dcddade26857",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"Message\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url_Collection}}/api/user/2"
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7fb23b14-bf0f-43f3-8767-04fae8c8db61",
								"exec": [
									"//Request Level Pre-Request Script\r",
									"console.log(\"Pre-request Script at Request Level\");\r",
									"\r",
									"//local variables is request level variables\r",
									"pm.variables.set(\"url_Local\",\"https://reqres.in\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "192d8950-3714-4a1a-85fd-9c3c50f5f5f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url_Local}}/api/users/2"
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d4d6e57-16d3-4770-9d39-9f588a58734f",
								"exec": [
									"//Request Test Pre-Request Script\r",
									"console.log(\"Test Script at Request Level\");\r",
									"\r",
									"\r",
									"pm.test(\"Dleted Sucesfully\",()=>{\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7770d12a-1a2e-4beb-84d9-da837cbb950c",
								"exec": [
									"//Request Level Pre-Request Script\r",
									"console.log(\"Pre-request Script at Request Level\");\r",
									"\r",
									"\r",
									"//url_Environment is Environmental url_Environmental variable= used in environment only $ ALSO USED IN DIFFERENT collections but need to change environment "
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "952f3706-6bbb-465b-a07f-c5f23f941cdd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{url_Environment}}/api/unknown/2"
					},
					"response": []
				},
				{
					"name": "Variables by Pre-Request Script",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "76a22571-aa75-49b6-a9d4-4b89622a4fa1",
								"exec": [
									"\r",
									"\r",
									"//Local variable (it Will Deleted After Use/ When Resquest sends)\r",
									"pm.variables.set(\"url_Local\",\"https://reqres.in/api\");\r",
									"\r",
									"\r",
									"//Global Variable\r",
									"pm.globals.set(\"User_id\",\"5\");\r",
									"\r",
									"//Environment Variable\r",
									"pm.environment.set(\"url_Environment\",\"https://reqres.in/api\");\r",
									"\r",
									"//Collection Variables\r",
									"pm.collectionVariables.set(\"collectionVariable\",\"56\");\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c0204826-2ed9-46e7-b7ce-f8da5d1196c2",
								"exec": [
									"//Print OR get values of Variables\r",
									"    //Local Vriables\r",
									"        console.log(pm.variables.get(\"url_Local\"));\r",
									"\r",
									"    //Global Variabes\r",
									"        console.lob(pm.globals.get(\"User_id\"));\r",
									"\r",
									"    //Environment Variables\r",
									"        console.log(pm.environment.get(\"url_Environment\"));\r",
									"\r",
									"    //Collection VAriables\r",
									"        console.log(pm.collectionVariables.get(\"collectionVariable\"));\r",
									"\r",
									"//Delete Global Variable After use\r",
									"pm.globals.unset(\"User_id\");\r",
									"\r",
									"//Delete Environment Variable After Use\r",
									"pm.environment.unset(\"url_Environment\");\r",
									"\r",
									"//Delete Collection Variables After Use\r",
									"pm.collectionVariables.unset(\"collectionVariable\");\r",
									"\r",
									"//Value Name(Key) is need Only Not Value"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2eacf9e1-c4c4-440b-9327-8d67bf92ff3a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url_Local}}/user/{{User_id}}"
					},
					"response": []
				}
			],
			"id": "6737d13d-c08c-4232-afe4-eb5448d8606c",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "564807d1-f28c-4b5a-a25a-ec5c338c4f17",
						"type": "text/javascript",
						"exec": [
							"//Folder Level Pre-Request Script",
							"console.log(\"Pre-request Script at Folder Level\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7fd7aa6e-a839-4e01-a942-f5eacea89d8c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Api_Chaning",
			"item": [
				{
					"name": "Post  Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eeb0a47b-3c6a-4d59-a805-a2af7749a3ff",
								"exec": [
									"//To Save the response in (var json) variable\r",
									"var json= JSON.parse(responseBody);\r",
									"\r",
									"//Creating Environmental variable/ Extracting Id \r",
									"pm.environment.set(\"json_ID\",jsonData.id);\r",
									"pm.environment.set(\"json_Status\",jsonData.status);   \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d9db214-8332-4e51-9aa4-7a7c54eecdc1",
								"exec": [
									"//Local VAriable\r",
									"pm.globals.set(\"URL\",\"https://gorest.co.in\");\r",
									"\r",
									"//Create Random Variables\r",
									"    //1. var random =Store randomly created data\r",
									"    var random= Math.random().toString(30).substring(5);\r",
									"\r",
									"        //Random Email Create\r",
									"        var Email= \"om\"+ random+ \"@gamil.com\";\r",
									"\r",
									"        //Random Name Create\r",
									"        var Name=\"Joker\" +random;\r",
									"\r",
									"    //2.Set it as Environment/Global/Collection Variable to get use it\r",
									"    pm.collectionVariables.set(\"Random_Email\",Email);\r",
									"    pm.collectionVariables.set(\"Random_Name\", Name);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5021373b-e9af-4e7b-8905-a29358b809f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "bfad66fb1e5dd834d1955fb2b9e593c8574bbd2654bc17d98fd26a82378924e6"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"{{Random_Name}}\", \r\n\"gender\": \"male\" ,\r\n\"email\": \"{{Random_Email}}\",// Every timeto send request Change Email Mandatory\r\n\"status\": \"inactive\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/public/v2/users"
					},
					"response": []
				},
				{
					"name": "Get post data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8a1c04-58c0-483e-92c8-4dad02ebff11",
								"exec": [
									"// Validating json data values with POST request \r",
									"\r",
									"pm.test(\"Validate json data\",()=>{\r",
									"   var post_json= pm.response.get(\"json_ID\");\r",
									"    pm.expect(jsonData.id).to.eql(post_json);\r",
									"\r",
									"    pm.expect(jsonData.status).to.eql(pm.response.get(\"json_Status\"));\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "193aee60-c420-4f56-ae9d-0507640173c6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "bfad66fb1e5dd834d1955fb2b9e593c8574bbd2654bc17d98fd26a82378924e6"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{URL}}/public/v2/users/{{ID}}"
					},
					"response": []
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e962e4ce-ae81-4648-9734-1564184a3c9f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eb3a1e25-9a53-4d9b-a388-7b4569237284",
								"exec": [
									"//Create Random Variables\r",
									"    //1. var random =Store randomly created data\r",
									"    var random= Math.random().toString(30).substring(5);\r",
									"\r",
									"        //Random Email Create\r",
									"        var Email= \"jay\"+ random+ \"@gamil.com\";\r",
									"\r",
									"        //Random Name Create\r",
									"        var Name=\"jay\" +random;\r",
									"\r",
									" //2.Set it as Environment/Global/Collection Variable to get use it\r",
									"    pm.collectionVariables.set(\"Random_Email\",Email);\r",
									"    pm.collectionVariables.set(\"Random_Name\", Name);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2b16dd78-2e47-4d9a-ad22-381fc8d8cda9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "bfad66fb1e5dd834d1955fb2b9e593c8574bbd2654bc17d98fd26a82378924e6"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"{{Random_Name}}\" ,\r\n\"email\": \"{{Random_Email}}\",\r\n\"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/public/v2/users/{{ID}}"
					},
					"response": []
				},
				{
					"name": "Delete posted data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ffe8143-8563-4811-9624-b9012687b631",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "18ee6acf-2405-4fbc-8c0e-4b434a653226",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "bfad66fb1e5dd834d1955fb2b9e593c8574bbd2654bc17d98fd26a82378924e6"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{URL}}/public/v2/users/{{ID}}"
					},
					"response": []
				}
			],
			"id": "7572dae0-d1ba-485b-a629-e6f6d2d3726c",
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "bfad66fb1e5dd834d1955fb2b9e593c8574bbd2654bc17d98fd26a82378924e6"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a3b49008-764e-48c6-9196-2148783d1530",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a6a479f3-69a7-45ed-8206-e1f1b605bc94",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "bfad66fb1e5dd834d1955fb2b9e593c8574bbd2654bc17d98fd26a82378924e6"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "81047c84-7052-42d0-bd13-da9369cba317",
				"type": "text/javascript",
				"exec": [
					"console.log(\"Pre-Reqeust at Collection Level\") ",
					"",
					"",
					"//url_Collection is collection variable = used in collection only"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "088c29e2-1a3f-434c-b1b2-4c49a8d58ab9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4eb23ea0-5d28-4acc-b387-21c332905f51",
			"key": "url_Collection",
			"value": "https://reqres.in",
			"type": "string"
		},
		{
			"id": "50b367d2-29f2-4df4-9b88-e15f2b91bd1d",
			"key": "collectionVariable",
			"value": ""
		},
		{
			"id": "37c5cd4a-3d07-4b57-b66f-a3d12532b168",
			"key": "Random_Email",
			"value": ""
		},
		{
			"id": "24a837b2-722d-4a52-b821-8d43b1d1f978",
			"key": "Random_Name",
			"value": ""
		}
	]
}